name: CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
#2
env:
  REGISTRY: ${{vars.REGISTRY}}
  IMAGE_NAME: ${{vars.IMAGE_NAME}}
  DB_URL: ${{ secrets.DB_URL }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

#3
jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - name: Checkout the repo 
      uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          backend:
            - 'backend/**'
            - '.github/workflows/**'
          web:
            - 'web/**'
          mobile:
            - 'mobile/**'
            
#  build-mobile:
#      name: Build & Deploy mobile
#      needs: changes
#      if: ${{ needs.changes.outputs.frontend == 'true' }}
#      defaults:
#        run:
#          working-directory: ./mobile
#      runs-on: ubuntu-latest
#      steps:
#      - name: Flutter action
#        uses: subosito/flutter-action@v2.16.0
#
#      - name: Checkout the repo
#        uses: actions/checkout@v4
#        with:
#          channel: stable
#          flutter-version: 3.19.0
#      - run: |
#              flutter build ipa \
#              --dart-define=KEYCLOAK_BASE_URL=https://bloc360.live:8443/realms/bloc360 \
#              --dart-define=API_URL=https://bloc360.live:8080 \
#              --dart-define=BASE_URL=https://bloc360.live \
#              --dart-define=KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }}

  build-web:
    name: Build & Deploy React Web App
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.web == 'true' }}
    defaults:
      run:
        working-directory: ./web

    steps:
      # Step 1: Checkout the repo
      - name: Checkout the repo
        uses: actions/checkout@v4

      # Step 2: build the project
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
           node-version: 23.3
           cache: 'npm'
           cache-dependency-path: '**/package-lock.json'
      - run: npm ci
      - run: |
          export REACT_APP_API_URL=${{ secrets.API_URL }}
          export REACT_APP_KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }}
          npm run build

      - name: scp web files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: "./build/*"
          target: "/opt/persist/web"
          rm: true

  build_backend:
    name: Build backend
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repo
      - name: Checkout the repo
        uses: actions/checkout@v4

      # Step 2: Build backend container image
      - name: Build backend container image
        working-directory: ./backend
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: docker build -t ghcr.io/bytecraft-development/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.PERSONAL_ACT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      # Step 4: Push the Docker image to GitHub Container Registry
      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/bytecraft-development/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) && docker tag ghcr.io/bytecraft-development/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) ghcr.io/bytecraft-development/$(echo $IMAGE_NAME):latest && docker push ghcr.io/bytecraft-development/$(echo $IMAGE_NAME):latest

      # Step 5: SSH into server, remove old image, pull new image from registry, and run container
      - name: SSH and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: |
            export PATH="/usr/local/bin:$PATH"
            source ~/.bashrc
            security unlock-keychain -p ${{ secrets.LOCAL_PASS }}
            echo "${{ secrets.PERSONAL_ACT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            
            # Check if the container is running using the old image and then stop and remove it if found
            if [ "$(docker ps -q --filter ancestor=ghcr.io/bytecraft-development/bloc360)" ]; then
            docker stop $(docker ps -q --filter ancestor=ghcr.io/bytecraft-development/bloc360)
            docker rm $(docker ps -a -q --filter ancestor=ghcr.io/bytecraft-development/bloc360)
            
            # Remove the old image
            docker rmi ghcr.io/bytecraft-development/bloc360
            fi

            # Pull the new image from GitHub Container Registry
            docker pull ghcr.io/bytecraft-development/bloc360:latest

            # Start the new container - bump #1
            docker run -d -p 8080:8080 \
            -e DB_URL=${{ secrets.DB_URL }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e SSLCERTPASS=${{ secrets.SSLCERTPASS }} \
            -e KEYCLOAK_URL=${{ secrets.KEYCLOAK_URL }} \
            -e KEYCLOAK_REALM=${{ secrets.KEYCLOAK_REALM }} \
            -e KEYCLOAK_DOMAIN=${{ secrets.KEYCLOAK_DOMAIN }} \
            -e KEYCLOAK_ADMINCLIENTID=${{ secrets.KEYCLOAK_ADMINCLIENTID }} \
            -e KEYCLOAK_CLIENTSECRET=${{ secrets.KEYCLOAK_CLIENTSECRET }} \
            -e KEYCLOAK_AUTH=${{ secrets.KEYCLOAK_AUTH }} \
            -e SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }} \
            --name bloc360 --restart always --platform linux/amd64 ghcr.io/bytecraft-development/bloc360:latest 

